<!-- Copyright (c) 1999 Neil Blakey-Milner, All rights reserved.

     Redistribution and use in source (SGML DocBook) and 'compiled' forms
     (SGML HTML, PDF, PostScript, RTF and so forth) with or without
     modification, are permitted provided that the following conditions
     are met:

      1.  Redistributions of source code (SGML DocBook) must retain the above
	 copyright notice, this list of conditions and the following
	 disclaimer as the first lines of this file unmodified.

      2.  Redistributions in compiled form (transformed to other DTDs,
	 converted to PDF, PostScript, RTF and other formats) must reproduce
	 the above copyright notice, this list of conditions and the
	 following disclaimer in the documentation and/or other materials
	 provided with the distribution.

     THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     DISCLAIMED.  IN NO EVENT SHALL NIK CLAYTON BE LIABLE FOR ANY DIRECT,
     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
     ANY WAY OUT OF THE USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE
     POSSIBILITY OF SUCH DAMAGE.

     $FreeBSD$
-->

<chapter id="doc-build">
  <title>O processo de constru&ccedil;&atilde;o da 
    documenta&ccedil;&atilde;o</title>

  <para>A principal finalidade desse capitulo &eacute; explicar 
    claramente <emphasis>como o processo de cria&ccedil;&atilde;o da 
    documenta&ccedil;&atilde;o &eacute; organizado</emphasis>, e
    <emphasis>e como fazer modifica&ccedil;&otilde;es a este 
    processo</emphasis>.</para>

  <para>Depois de finalizar a leitura deste cap&iacute;tulo 
    voc&ecirc; dever&aacute;:</para>

  <itemizedlist>
    <listitem>
      <para>Saber o que voc&ecirc; precisa para construir a 
	documenta&ccedil;&atilde;o FDP, em adi&ccedil;&atilde;o ao 
	que foi mencionado no 
	<link linkend="tools">cap&iacute;tulo Ferramentas SGML</link>.
	</para>
    </listitem>

    <listitem>
      <para>Poder ler e entender as instru&ccedil;&otilde;es do
	<application>make</application> que est&atilde;o presentes 
	em cada documento <filename>Makefile</filename>, assim como 
	uma vis&atilde;o geral do <filename>doc.project.mk</filename>.
	</para>
    </listitem>

    <listitem>
      <para>Poder customizar o processo de constru&ccedil;&atilde;o 
	usando <application>make</application> vari&aacute;veis e
	<application>make</application> alvos.</para>
    </listitem>
  </itemizedlist>

  <sect1>
    <title>Ferramentas para constru&ccedil;&atilde;o da 
      documenta&ccedil;&atilde;o do FreeBSD</title>

    <para>Aqui est&atilde;o suas ferramentas.  Use-as da maneira que 
      voc&ecirc; puder.</para>

    <itemizedlist>
      <listitem>
	<para>A primeira ferramenta que voc&ecirc; precisar&aacute; 
	  &eacute; o <application>make</application>, mais 
	  especificamente o <application>Berkeley Make</application>.
	  </para>
      </listitem>

      <listitem>
	<para>A constru&ccedil;&atilde;o de pacotes no FreeBSD 
	  &eacute; executado pelo 
	  <application>pkg_create</application>.  Se voc&ecirc; 
	  n&atilde;o est&atilde; usando FreeBSD, voc&ecirc; 
	  ter&aacute; que viver sem pacotes, ou ent&atilde;o compilar
	  o c&oacute;digo fonte voc&ecirc; mesmo.</para>
      </listitem>

      <listitem>
	<para>O <application>gzip</application> &eacute; 
	  necess&aacute;rio para criar vers&otilde;es compactadas do 
	  documento.  O compressor <application>bzip2</application> e
	  os arquivos <application>zip</application> tamb&eacute;m 
	  s&atilde;o suportados.  O <application>tar</application> 
	  &eacute; suportado, mas a constru&ccedil;&atilde;o de
	  pacotes necessita dele.</para>
      </listitem>

      <listitem>
	<para>O <application>install</application> &eacute; o 
	  m&eacute;todo padr&atilde;o para instalar a 
	  documenta&ccedil;&atilde;o.  Entretanto, h&aacute; 
	  alternativas.</para>
      </listitem>
    </itemizedlist>

    <note>
      <para>&Eacute; improv&aacute;vel que voc&ecirc; tenha qualquer 
	problema em localizar os ultimos dois, eles est&atilde;o 
	sendo mencionados apenas para que a listagem fique completa.
	</para>
    </note>
  </sect1>

  <sect1>
    <title>Entendendo Makefiles na &aacute;rvore da 
      documenta&ccedil;&atilde;o</title>

    <para>H&aacute; tr&ecirc;s tipos principais de 
      <filename>Makefile</filename>s na &aacute;rvore do projeto de 
      document&ccedil;&atilde;o do FreeBSD.</para>

    <itemizedlist>
      <listitem>
	<para>Os <link linkend="sub-make">
	<filename>Makefile</filename>s de subdiret&oacute;rio</link> 
	simplesmente passam comandos para aqueles direct&oacute;rios 
	abaixo dele.</para>
      </listitem>

      <listitem>
	<para>O <link linkend="doc-make">
	  <filename>Makefile</filename>s de 
	  Documenta&ccedil;&atilde;o</link> descrevem o(s) 
	  documento(s) que deve ser produzido(s) a partir desde 
	  diret&oacute;rio.</para>
      </listitem>

      <listitem>
	<para>Os <link linkend="make-includes">
	  <application>Make</application> includes</link> s&atilde;o 
	  os respons&aacute;veis pela produ&ccedil;&atilde;o do 
	  documento, e geralmente est&atilde;o na forma
	  <filename>doc.<replaceable>xxx</replaceable>.mk</filename>.
	  </para>
      </listitem>
    </itemizedlist>

    <sect2 id="sub-make">
      <title>Makefiles de Subdiret&oacute;rios</title>

      <para>Estes <filename>Makefile</filename>s geralmente tem a 
	forma:</para>

      <programlisting>SUBDIR =articles
SUBDIR+=books

COMPAT_SYMLINK = en

DOC_PREFIX?= ${.CURDIR}/..
.include "${DOC_PREFIX}/share/mk/doc.project.mk"</programlisting>

      <para>Em um sum&aacute;rio r&aacute;pido, as primeiras quatro 
	linhas definem as vari&aacute;veis do
	<application>make</application>, <makevar>SUBDIR</makevar>, 
	<makevar>COMPAT_SYMLINK</makevar>, e 
	<makevar>DOC_PREFIX</makevar>.</para>

      <para>A primeira indica&ccedil;&atilde;o ao 
	<makevar>SUBDIR</makevar> statement, tanto quanto a 
	indica&ccedil;&atilde;o<makevar>COMPAT_SYMLINK</makevar>, 
	mostra como atribuir um valor a uma vari&aacute;vel,
	cancelando algum valor precendente.</para>

      <para>A segunda indica&ccedil;&atilde;o 
	<makevar>SUBDIR</makevar> mostra como um valor &eacute; 
	adicionado ao valor atual de uma vari&aacute;vel.  A 
	vari&aacute;vel <makevar>SUBDIR</makevar> &eacute; agora 
	<literal>articles books</literal>.</para>

      <para>A indica&ccedil;&atilde;o <makevar>DOC_PREFIX</makevar> 
	mostra como um valor &eacute; atribu&iacute;do para 
	vari&aacute;vel, mas somente se j&aacute; n&atilde;o estiver 
	definida.  Isto &eacute; &uacute;til se o 
	<makevar>DOC_PREFIX</makevar> n&atilde;o for onde este 
	<filename>Makefile</filename> pensa que &eacute; - 
	o usu&aacute;rio pode cancelar este e fornecer o valor 
	correto.</para>

      <para>Agora o que tudo isso significa? <makevar>SUBDIR</makevar>
	menciona que todos subdiret&oacute;rios abaixo deste, devem 
	passar qualquer trabalho de processo de 
	constru&ccedil;&atilde;o nele.</para>

      <para><makevar>COMPAT_SYMLINK</makevar> &eacute; 
	espec&iacute;fico a compatibilidade dos links 
	simb&oacute;licos (bastante surpreendente) para linguagens
	oficiais(<filename>doc/en</filename> apontaria para
	<filename>en_US.ISO-8859-1</filename>).</para>

      <para><makevar>DOC_PREFIX</makevar> &eacute; o caminho para a 
	ra&iacute;z da &aacute;rvore do projeto de 
	documenta&ccedil;&atilde;o do FreeBSD.  Isto nem sempre 
	&eacute; facil de encontrar, e tamb&eacute;m pode ser 
	facilmente cancelado, para permitir flexibilidade.
	<makevar>.CURDIR</makevar> &eacute; uma vari&aacute;vel 
	interna do <application>make</application> com o caminho 
	para o diret&oacute;rio atual.</para>

      <para>A linha final inclue o arquivo principal do projeto de
	documenta&ccedil;&atilde;o do FreeBSD, o 
	<filename>doc.project.mk</filename>, ele &eacute; o 
	respons&aacute; por converter estas v&aacute;riaveis em 
	instru&ccedil;&otilde;es de compila&ccedil;&atilde;o para 
	uso do <application>make</application>.</para>

    </sect2>
    <sect2 id="doc-make">
      <title>Makefiles de Documenta&ccedil;&atilde;o</title>

      <para>Estes <filename>Makefile</filename>s ajustam v&aacute;rias
	vari&aacute;veis do <application>make</application> que 
	descrevem como construir a documenta&ccedil;&atilde;o 
	contida naquele diret&oacute;rio.</para>

      <para>Aqui esta um exemplo:</para>

      <programlisting>MAINTAINER=nik@FreeBSD.org

DOC?= book

FORMATS?= html-split html

INSTALL_COMPRESSED?= gz
INSTALL_ONLY_COMPRESSED?=

# SGML content
SRCS=  book.sgml

DOC_PREFIX?= ${.CURDIR}/../../..

.include "$(DOC_PREFIX)/share/mk/docproj.docbook.mk"</programlisting>

      <para>A vari&aacute;vel <makevar>MAINTAINER</makevar> &eacute; 
	uma das mais importantes.  Esta vari&aacute;vel fornece a 
	habilidade de reivindicar a posse sobre um documento no 
	projeto de documenta&ccedil;&atilde;o do FreeBSD, &eacute; 
	por meio dela que voc&ecirc; recebe a responsabilidade de 
	mant&eacute;-lo.</para>

      <para><makevar>DOC</makevar> &eacute; o nome (sem a 
	extens&atilde;o <filename>.sgml</filename>) do principal 
	documento criado por este diret&oacute;rio. A vari&aacute;vel
	<makevar>SRCS</makevar> lista todos os arquivo individuais 
	que constituem o documento.  Ela tamb&eacute;m deve incluir 
	os arquivos importantes, nos quais qualquer mudan&ccedil;a 
	deve resultar em uma reconstru&ccedil;&atilde;o.</para>

      <para><makevar>FORMATS</makevar> indica o formato padr&atilde;o
	que deve ser criado este documento.
	<makevar>INSTALL_COMPRESSED</makevar> &eacute; a lista 
	padr&atilde;o de t&eacute;cnicas de compress&atilde;o que 
	devem ser usados na cria&ccedil;&atilde;o do documento.  A 
	vari&aacute;vel <makevar>INSTALL_ONLY_COMPRESS</makevar>, em 
	branco por padr&atilde;o, n&atilde;o deve estar em branco 
	somente se documentos compactados forem desejados na 
	compila&ccedil;&atilde;o.</para>

      <note>
	<para>N&oacute;s cobrimos as atribui&ccedil;&otilde;es
	  opcionais de vari&aacute;veis na <link 
	  linkend="sub-make">se&ccedil;&atilde;o anterior</link>.
	  </para>
      </note>

      <para>Voc&ecirc; tamb&eacute;m j&aacute; deve estar
      	familiarizado com a vari&aacute;vel 
	<makevar>DOC_PREFIX</makevar> e com as
	instru&ccedil;&otilde;es de include.</para>
    </sect2>
  </sect1>

  <sect1 id="make-includes">
    <title>Includes do make do projeto de documenta&ccedil;&atilde;o 
      do FreeBSD</title>

    <para>Isto &eacute; melhor explicado pela inspe&ccedil;&atilde;o 
      no c&oacute;digo.  Aqui est&atilde;o os arquivos include do 
      sistema:</para>

    <itemizedlist>
      <listitem>
	<para><filename>doc.project.mk</filename> &eacute; o principal
	  arquivo include do projeto, que inclue todos os arquivos 
	  includes necess&aacute;rios.</para>
      </listitem>

      <listitem>
	<para><filename>doc.subdir.mk</filename> controla a
	  navega&ccedil;&atilde;o na &aacute;rvore de 
	  documenta&ccedil;&atilde;o durante 
	  o processo de constru&ccedil;&atilde;o e 
	  instala&ccedil;&atilde;o.</para>
      </listitem>

      <listitem>
	<para><filename>doc.install.mk</filename> fornece as 
	  vari&aacute;veis que afetam a posse e a 
	  instala&ccedil;&atilde;o de documentos.</para>
      </listitem>

      <listitem>
	<para><filename>doc.docbook.mk</filename> &eacute; 
	  inclu&iacute;do se o <makevar>DOCFORMAT</makevar> 
	  for <literal>docbook</literal> e o <makevar>DOC</makevar> 
	  estiver configurado.</para>
      </listitem>
    </itemizedlist>

    <sect2>
      <title>doc.project.mk</title>

      <para>Por inspe&ccedil;&atilde;o:</para>

      <programlisting>DOCFORMAT?=	docbook
MAINTAINER?=	doc@FreeBSD.org

PREFIX?=	/usr/local
PRI_LANG?=	en_US.ISO8859-1

.if defined(DOC)
.if ${DOCFORMAT} == "docbook"
.include "doc.docbook.mk"
.endif
.endif

.include "doc.subdir.mk"
.include "doc.install.mk"</programlisting>

      <sect3>

	<title>Vari&aacute;veis</title>

	<para><makevar>DOCFORMAT</makevar> e 
	  <makevar>MAINTAINER</makevar> ser&atilde;o atribu&iacute;dos
	  valores padr&atilde;o, se estes n&atilde;o estiverem 
	  definidos no arquivo de documento do make (Makefile).</para>

	<para><makevar>PREFIX</makevar> define o caminho no
	  qual os <link linkend="tools">aplicativos de 
	  constru&ccedil;&atilde;o da documenta&ccedil;&atilde;o
	  </link> est&atilde;o instalados.  Para uma 
	  instala&ccedil;&atilde;o normal dos pacotes e/ou ports, 
	  este caminho sera sempre <filename>/usr/local</filename>.
	  </para>

	<para><makevar>PRI_LANG</makevar> deve ser configurada para 
	  refletir o idioma e a codifica&ccedil;&atilde;o  natural 
	  dos usu&aacute;rios aos quais os documentos se destinam.  
	  O Ingl&ecirc;s Americano (US English) &eacute; o 
	  padr&atilde;o.</para>

	<note>
	  <para><makevar>PRI_LANG</makevar> de maneira alguma afeta
	    os documentos que ser&atilde;o, ou que poder&atilde;o, 
	    ser compilados.  Sua fun&ccedil;&atilde;o principal 
	    &eacute; criar links para os documentos referenciados 
	    com maior frequencia no diretorio raiz de
	    instala&ccedil;&atilde;o da documenta&ccedil;&atilde;o do
	    FreeBSD.</para>
	</note>
      </sect3>

      <sect3>
	<title>Condicionais</title>

	<para>A linha <literal>.if defined(DOC)</literal> &eacute; 
	  um exemplo da condicional do <application>make</application>
	  , como em outros programas, define o comportamento se 
	  algum condi&ccedil;&atilde;o &eacute; verdadeira ou se 
	  &eacute; falsa.  <literal>defined</literal> &eacute; uma 
	  fun&ccedil;&atilde;o que retorna se a vari&aacute;vel 
	  passada est&aacute; definida ou n&atilde;o.</para>

	<para>A seguir, <literal>.if ${DOCFORMAT} == "docbook"
	  </literal>, teste se a vari&aacute;vel <makevar>DOCFORMAT
	  </makevar> &eacute; <literal>"docbook"</literal>, e neste 
	  caso, inclue o <filename>doc.docbook.mk</filename>.</para>

	<para>Os dois <literal>.endif</literal>s fecham as duas 
	  condi&ccedil;&otilde;es anteriores, marcando o fim da sua 
	  aplica&ccedil;&atilde;o.</para>
      </sect3>
    </sect2>

    <sect2>
      <title>doc.subdir.mk</title>

      <para>Isto &eacute; muito longo para ser explicado por 
	inspe&ccedil;&atilde;o, voc&ecirc; dever&aacute; estar apto 
	a trabalhar com isto com o conhecimento adquirido nos 
	cap&iacute;tulos anteriores, e uma pequena ajuda ser&aacute; 
	dada aqui.</para>

      <sect3>
	<title>Vari&aacute;veis</title>

	<itemizedlist>
	  <listitem>
	    <para><makevar>SUBDIR</makevar> &eacute; a lista de 
	      subdiret&oacute;rios em que o processo de 
	      constru&ccedil;&atilde;o deve feito abaixo.</para>
	  </listitem>

	  <listitem>
	    <para><makevar>ROOT_SYMLINKS</makevar> &eacute; o nome dos
	      diret&oacute;rios que devem ser linkados a ra&iacute;z 
	      de instala&ccedil;&atilde;o do documento em sua 
	      localiza&ccedil;&atilde;o atual, se a linguagem atual 
	      &eacute; a linguagem prim&aacute;ria (especificado por
	      <makevar>PRI_LANG</makevar>).</para>
	  </listitem>

	  <listitem>
	    <para><makevar>COMPAT_SYMLINK</makevar> &eacute; 
	      descrito na se&ccedil;&atilde;o <link 
	      linkend="sub-make">Subdiret&oacute;rio Makefiles</link>.
	      </para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>Targets e macros</title>

	<para>Depend&ecirc;ncias s&atilde;o descritas por
	  <literal><replaceable>target</replaceable>:
	  <replaceable>depend&ecirc;ncia1 depend&ecirc;ncia2 ...
	  </replaceable></literal>, onde para construir o 
	  <literal>target</literal>, voc&ecirc; necessita 
	  primeiramente construir as depend&ecirc;ncias dadas.</para>

	<para>Em seguida a dupla descritiva, instru&ccedil;&otilde;es
	  de como construir o target pode ser dada, se o processo de 
	  convers&atilde;o entre o target e estas depend&ecirc;ncias 
	  n&atilde;o forem previamente definidas, ou se esta 
	  convers&atilde;o particular n&atilde;o for a mesma que o 
	  m&eacute;todo de convers&atilde;o padr&atilde;o.</para>

	<para>A depend&ecirc;ncia especial <literal>.USE</literal> 
	  define o equivalente ao macro.</para>

<programlisting>_SUBDIRUSE: .USE
.for entry in ${SUBDIR}
	@${ECHO} "===&gt; ${DIRPRFX}${entry}"
	@(cd ${.CURDIR}/${entry} &amp;&amp; \
	${MAKE} ${.TARGET:S/realpackage/package/:S/realinstall/install/} DIRPRFX=${DIRPRFX}${entry}/ )
.endfor</programlisting>

	<para>Acima, <maketarget>_SUBDIRUSE</maketarget> &eacute; 
	  agora um macro que ir&aacute; executar comandos passados 
	  quando for listado como depend&ecirc;ncia.</para>

	<para>O que configura este macro a parte de outros targets? 
	  Basicamente, &eacute; executado <emphasis>ap&oacute;s
	  </emphasis> as instru&ccedil;&otilde;es passadas no 
	  processo de constru&ccedil;&atilde;o, s&atilde;o listados 
	  como uma depend&ecirc;ncia, e n&atilde;o o configura o 
	  <makevar>.TARGET</makevar>, que &eacute; a
	  vari&aacute;vel que cont&eacute;m o nome do target atual
	  est&aacute; sendo constru&iacute;do.</para>

<programlisting>clean: _SUBDIRUSE
	rm -f ${CLEANFILES}</programlisting>

	<para>Acima, o <maketarget>clean</maketarget> ir&aacute; usar
	  o macro <maketarget>_SUBDIRUSE</maketarget> depois de ter
	  executado a instru&ccedil;&atilde;o
	  <command>rm -f ${CLEANFILES}</command>.  De fato, isto causa
	  um <maketarget>clean</maketarget> na &aacute;rvore de 
	  diret&oacute;rio, deletando arquivos constru&iacute;dos 
	  enquanto vai <emphasis>descendo</emphasis> aos 
	  subdiret&oacute;rios.</para>

	<sect4>
	  <title>Targets fornecidos</title>

	  <itemizedlist>
	    <listitem>
	      <para><maketarget>install</maketarget> e
		<maketarget>package</maketarget>, ambos v&atilde;o 
		abaixo na &aacute;rvore de diret&oacute;rio 
		requisitando a real vers&atilde;o deles nos 
		subdiret&oacute;rios.  (<maketarget>realinstall
		</maketarget> e <maketarget>realpackage</maketarget>
		 respectivamente)</para>
	    </listitem>

	    <listitem>
	      <para>O <maketarget>clean</maketarget> remove arquivos 
		criados pelo processo de compila&ccedil;&atilde;o (e 
		tamb&eacute;m desce na &aacute;rvore de 
		diret&oacute;rios).  O <maketarget>cleandir
		</maketarget> faz a mesma coisa, e tamb&eacute;m 
		remove o diret&oacute;rio de objetos se este existir.
		</para>
	    </listitem>
	  </itemizedlist>
	</sect4>
      </sect3>

      <sect3>
	<title>Mais condicionais</title>

	<itemizedlist>
	  <listitem>
	    <para><literal>exists</literal> &eacute; outra 
	      fun&ccedil;&atilde;o condicional que retorna verdadeiro
	      se o arquivo dado existir.</para>
	  </listitem>

	  <listitem>
	    <para><literal>empty</literal> retorna verdadeiro se a 
	      vari&aacute;vel passada estiver vazia.</para>
	  </listitem>

	  <listitem>
	    <para><literal>target</literal> retorna verdadeiro se o 
	      target passado j&aacute; n&atilde;o existir.</para>
	  </listitem>
	</itemizedlist>
      </sect3>

      <sect3>
	<title>Constru&ccedil;&atilde;o de Looping no make (.for)
	  </title>

	<para>O <literal>.for</literal> fornece uma maneira de 
	  repetir instru&ccedil;&otilde;es definidas para cada 
	  elemente separado por espa&ccedil;o em uma vari&aacute;vel.
	  Ele faz isso atribu&iacute;ndo uma vari&aacute;vel para 
	  conter o elemento atual na lista que est&aacute; sendo 
	  examinada.</para>

<programlisting>_SUBDIRUSE: .USE
.for entry in ${SUBDIR}
	@${ECHO} "===&gt; ${DIRPRFX}${entry}"
	@(cd ${.CURDIR}/${entry} &amp;&amp; \
	${MAKE} ${.TARGET:S/realpackage/package/:S/realinstall/install/} DIRPRFX=${DIRPRFX}${entry}/ )
.endfor</programlisting>

	<para>Acima, se o <makevar>SUBDIR</makevar> est&aacute; vazio,
	  nenhuma a&ccedil;&atilde;o &eacute; feita; se ele tiver um 
	  ou mais elementos, as instru&ccedil;&otilde;es entre o 
	  <literal>.for</literal> e o <literal>.endfor</literal> 
	  repetiria para cada elemento, com o <makevar>entry</makevar>
	  sendo substitu&iacute;da com o valor do elemento atual.
	  </para>
      </sect3>
    </sect2>
  </sect1>
</chapter>

<!--
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->

